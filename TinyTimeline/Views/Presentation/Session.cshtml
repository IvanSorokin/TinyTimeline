@using TinyTimeline.Models
@model SessionModel
@{
    Layout = "Layout";
}

<div class="margin_top">
    @await Html.PartialAsync("Menu", new MenuModel {SessionId = Model.SessionInfo.SessionId})
    @Html.DisplayFor(m => m.SessionInfo)
    
    <div class="margin_bottom">
        <label>@Html.DisplayFor(z => z.EventFilterType) events (@Model.Events.Count)</label>
    </div>
    
    @if (Model.Events.Count > 8)
    {
        @await Html.PartialAsync("TimelineEventFilters", Model.SessionInfo.SessionId)
    }
    
    @foreach (var e in Model.Events)
    {
        @Html.DisplayFor(m => e)
    }
    <div>
        @await Html.PartialAsync("TimelineEventFilters", Model.SessionInfo.SessionId)
        @await Html.PartialAsync("SessionButtons", Model.SessionInfo.SessionId)
    </div>
</div>

<script>
    $.each($('textarea[data-autoresize]'), function() {
        var offset = this.offsetHeight - this.clientHeight;
 
        var resizeTextarea = function(el) {
            $(el).css('height', 'auto').css('height', el.scrollHeight + offset);
        };

        resizeTextarea(this);
        $(this).on('keyup input', function() { resizeTextarea(this); }).removeAttr('data-autoresize');
    });
</script>