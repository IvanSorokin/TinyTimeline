@using TinyTimeline.Models
@model SessionModel
@{
    Layout = "Layout";
}

<div class="margin_top">
    @await Html.PartialAsync("Menu", new MenuModel {SessionId = Model.SessionInfo.SessionId})
    @Html.DisplayFor(m => m.SessionInfo)
    
    @foreach (var e in Model.Events)
    {
        <div class="vote_item break_word bordered_fill" id="@e.Id">

            <div>
                <label>Date: </label>
                @Html.DisplayFor(m => e.Date)
            </div>

            <div>
                <div class="event_content_block">
                    <label>Content: </label>
                    <div class="multiline">@Html.DisplayFor(m => e.Text)</div>
                </div>


                <div class="float_right voting_buttons">
                    <button class="btn btn-primary btn-sm" onclick="sendVote('@e.Id', '@Model.SessionInfo.SessionId', true)">Like</button>
                    <button class="btn btn-primary btn-sm" onclick="sendVote('@e.Id', '@Model.SessionInfo.SessionId', false)">Dislike</button>
                    <button class="btn btn-primary btn-sm" onclick="skip('@e.Id')">Skip</button>
                </div>
            </div>
        </div>
    }

    <div hidden id="voteEnd">
        Done! @Html.ActionLink("Watch timeline!", "Session", "Presentation", new {sessionId = Model.SessionInfo.SessionId})
    </div>
</div>